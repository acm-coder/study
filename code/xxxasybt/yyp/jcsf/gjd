// 高精度乘以高精度

int main() {
    cin >> stra >> strb;
    // getline(cin, stra), getline(cin, strb);
    int aa[110] = {0}, bb[110] = {0}, cc[220] = {0};
    aa[0] = stra.size(), bb[0] = strb.size();
    cc[0] = aa[0] + bb[0];
    for (int i = aa[0]; i; -- i) aa[aa[0] - i + 1] = stra[i - 1] - '0';
    for (int i = bb[0]; i; -- i) bb[bb[0] - i + 1] = strb[i - 1] - '0';
    
    for (int i = 1; i <= aa[0]; ++ i) {
        int t = 0;
        for (int j = 1; j <= bb[0]; ++ j) {
            cc[i + j - 1] += aa[i] * bb[j] + t;
            t = cc[i + j - 1] / 10;
            cc[i + j - 1] %= 10;
        }
        cc[i + bb[0]] += t;
    }

    // for (int i = 1, t = 0; i <= cc[0]; ++ i)
    //     cc[i] += t, t = cc[i] / 10, cc[i] %= 10;

    while(cc[0] > 1 && !cc[cc[0]]) cc[0] --;
    for (int i = cc[0]; i; -- i) cout << cc[i];
    return 0;
        
}


// 高精度除以高精度


int cmp(int *lhs, int* rhs) {
    if (lhs[0] < rhs[0]) return -1;
    else if (lhs[0] > rhs[0]) return 1;
    for (int i = lhs[0]; i; -- i)
        if (lhs[i] > rhs[i]) return 1;
        else if (lhs[i] < rhs[i]) return -1;
    return 0;
}

void init(int* ns, string& str) {
    ns[0] = str.size();
    for (int i = ns[0]; i; -- i) ns[ns[0] - i + 1] = str[i - 1] - '0';
}

void sub(int *lhs, int *rhs) {
    for (int i = 1; i <= lhs[0]; ++ i) {
        if (lhs[i] < rhs[i]) lhs[i + 1] --, lhs[i] += 10;
        lhs[i] -= rhs[i];
    }
    while(lhs[0] > 1 && !lhs[lhs[0]]) lhs[0] --;
}


int main() {
    cin >> stra >> strb;
    // getline(cin, stra), getline(cin, strb);
    int aa[310] = {0}, bb[310] = {0}, cc[310] = {0}, dd[310] = {0}, ee[310];
    init(aa, stra), init(bb, strb);
    cc[0] = aa[0] - bb[0] + 1;
    for (int i = cc[0]; i; -- i) {
        memset(ee, 0, sizeof ee);
        ee[0] = bb[0] + i - 1;
        memcpy(ee + i, bb + 1, sizeof(int) * bb[0]);
        while(cmp(aa, ee) >= 0)
            cc[i] ++, sub(aa, ee);
    }
    while(cc[0] > 1 && !cc[cc[0]]) -- cc[0];
    for (int i = cc[0]; i; -- i) cout << cc[i];
    cout << endl;
    for (int i = aa[0]; i; -- i) cout << aa[i];
    return 0;
}

// 高精度加高精度

void init(string& str, int *a) {
    a[0] = str.size();
    for (int i = 1; i <= a[0]; ++ i) a[i] = str[a[0] - i] - '0';
}

int main() {
    getline(cin, stra), getline(cin, strb);
    int aa[210] = {0}, bb[210] = {0}, cc[210] = {0};
    init(stra, aa), init(strb, bb);
    cc[0] = max(aa[0], bb[0]) + 1;
    for (int i = 1; i <= aa[0] || i <= bb[0]; ++ i) {
        cc[i] += aa[i] + bb[i];
        cc[i + 1] = cc[i] / 10;
        cc[i] %= 10;
    }
    while(cc[0] > 1 && !cc[cc[0]]) cc[0] --;
    for (int i = cc[0]; i; -- i)
        cout << cc[i];
    return 0;
}


// 高精度减高精度

void init(string& str, int * a) {
    a[0] = str.size();
    for (int i = 1; i <= a[0]; ++ i) a[i] = str[a[0] - i] - '0';
}

int main() {
    // cin >> stra >> strb;
    getline(cin, stra), getline(cin, strb);
    int aa[210] = {0}, bb[210] = {0}, cc[210] = {0};
    init(stra, aa), init(strb, bb);
    cc[0] = aa[0];
    for (int i = 1; i <= aa[0]; ++ i) {
        if (aa[i] < bb[i]) aa[i] += 10, aa[i + 1] --;
        cc[i] = aa[i] - bb[i];
    }
    while(cc[0] > 1 && !cc[cc[0]]) cc[0] --;
    for (int i = cc[0]; i; -- i)
        cout << cc[i];
    return 0;
}


